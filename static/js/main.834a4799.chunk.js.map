{"version":3,"sources":["components/DailyGraph/DailyGraph.module.css","components/Cards/Cards.module.css","api/index.js","components/CountryPicker/CountryPicker.js","components/Cards/Cards.js","components/Chart/Chart.js","components/DailyGraph/DailyGraph.js","components/StateWiseTable/StateWiseTable.js","App.js","index.js","App.module.css","components/StateWiseTable/StateWiseTable.module.css","components/CountryPicker/CountryPicker.module.css","components/Chart/Chart.module.css","images/covid-19-logo.png"],"names":["module","exports","url","fetchData","a","axios","get","data","confirmed","recovered","deaths","lastUpdate","fetchDailyData","map","reportDate","total","date","fetchCountries","countries","name","fetchCountryData","country","fetchStateWiseDetails","useInputStyles","makeStyles","underline","borderBottom","CountryPicker","handleCountryChange","classes","useState","fetchedCountries","setFetchedCountries","inputClasses","useEffect","fetchTheCountries","length","FormControl","variant","className","styles","formControl","Select","native","input","Input","onChange","e","target","value","i","key","Cards","container","Grid","spacing","justify","item","component","Card","xs","md","cx","card","infected","CardContent","Typography","color","start","end","duration","separator","Date","toDateString","Chart","dailyData","setDailyData","fetchApi","lineChart","labels","toLocaleDateString","month","day","datasets","label","borderColor","fill","backgroundColor","options","scales","yAxes","ticks","callback","ranges","divider","suffix","n","toString","formatNumber","barChart","legend","title","DailyGraph","activeClass","setActiveClass","fetchedData","setFetchedData","setStateWise","console","log","cases_time_series","statewise","totalconfirmed","showSpecificTimeData","days","index","startDate","setDate","getDate","datesArray","filter","dailyconfirmed","buttonsDiv","btn","active_button","onClick","StateWiseTable","stateWise","push","shift","totalCasesHeader","state","active","deltaconfirmed","deltarecovered","deltadeaths","header","stateWiseTable","cellSpacing","left","right","delta","center","App","setState","this","image","src","coronaImage","heading","Component","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.834a4799.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"DailyGraph_container__3dbZc\",\"btn\":\"DailyGraph_btn__3KyFi\",\"buttonsDiv\":\"DailyGraph_buttonsDiv__3huP4\",\"left\":\"DailyGraph_left__6WWIa\",\"right\":\"DailyGraph_right__3rhNm\",\"active_button\":\"DailyGraph_active_button__1iivK\",\"header\":\"DailyGraph_header__3TdbG\",\"label\":\"DailyGraph_label__InSv7\",\"confirmed\":\"DailyGraph_confirmed__2Vctw\",\"active\":\"DailyGraph_active__ro-Iz\",\"recovered\":\"DailyGraph_recovered__1MTiM\",\"deaths\":\"DailyGraph_deaths__23JsT\",\"delta\":\"DailyGraph_delta__3kiIp\",\"center\":\"DailyGraph_center__9Tgpe\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Cards_container__27578\",\"card\":\"Cards_card__1l8dY\",\"infected\":\"Cards_infected__1uAlU\",\"recovered\":\"Cards_recovered__Atqfz\",\"deaths\":\"Cards_deaths__MNK8Y\"};","import axios from 'axios';\r\n\r\nconst url = 'https://covid19.mathdro.id/api/';\r\nconst secondUrl = 'https://api.covid19india.org/data.json';\r\n\r\nexport const fetchData = async () => {\r\n\r\n    try{\r\n        const {data: {confirmed, recovered, deaths, lastUpdate}} = await axios.get(url);\r\n\r\n        return {confirmed, recovered, deaths, lastUpdate};\r\n\r\n    } catch(error){\r\n\r\n    }\r\n}\r\n\r\nexport const fetchDailyData = async () => {\r\n\r\n    try{\r\n        const {data} = await axios.get(url+'daily');\r\n\r\n        return data.map( ({confirmed, deaths, reportDate}) => ({\r\n                            confirmed: confirmed.total,\r\n                            deaths: deaths.total,\r\n                            date: reportDate\r\n                    }));\r\n\r\n    } catch(error){\r\n\r\n    }\r\n}\r\n\r\nexport const fetchCountries = async () => {\r\n    try{\r\n        const {data: {countries}} = await axios.get(url+'countries');\r\n        return countries.map(({name}) => name);\r\n    } catch(error){\r\n\r\n    }\r\n}\r\n\r\nexport const fetchCountryData = async (country) => {\r\n    try{\r\n        const {data: {confirmed, recovered, deaths, lastUpdate}} = await axios.get(url+'countries/'+country);\r\n        return {confirmed, recovered, deaths, lastUpdate};\r\n    } catch(error){\r\n\r\n    }\r\n}\r\n\r\nexport const fetchStateWiseDetails = async () => {\r\n    try{\r\n        const data = await axios.get(secondUrl);\r\n        return data;\r\n    } catch(error){\r\n\r\n    }\r\n}","import React, { useState, useEffect } from 'react';\r\nimport { FormControl, Select, Input, StylesProvider } from '@material-ui/core';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\n\r\nimport {fetchCountries} from '../../api';\r\n\r\nimport styles from './CountryPicker.module.css';\r\n\r\nconst useInputStyles = makeStyles({\r\n    underline: {\r\n      \"&:before\": {\r\n        // normal\r\n        borderBottom: \"none\"\r\n      },\r\n      \"&:after\": {\r\n        // focused\r\n        borderBottom: \"1px solid #e8e8e9\"\r\n      },\r\n      \"&:hover:not(.Mui-disabled):not(.Mui-focused):not(.Mui-error):before\": {\r\n        // hover\r\n        borderBottom: \"none\"\r\n      }\r\n    }\r\n  });\r\n\r\nconst CountryPicker = ({handleCountryChange, classes}) => {\r\n\r\n    const [fetchedCountries, setFetchedCountries] = useState([]);\r\n    const inputClasses = useInputStyles();\r\n\r\n    useEffect(()=>{\r\n        const fetchTheCountries = async () =>{\r\n            setFetchedCountries(await fetchCountries());\r\n        }\r\n        fetchTheCountries();\r\n    },[setFetchedCountries])\r\n\r\n    return(\r\n        fetchedCountries.length ?\r\n        (<FormControl variant=\"outlined\" className={styles.formControl}>\r\n            <Select native input={<Input classes={inputClasses} />} onChange={(e) => handleCountryChange(e.target.value)}>\r\n                <option value=\"\">Global (Select a Country)</option>\r\n                {fetchedCountries.map((country, i)=> <option value={country} key={i}>{country}</option>)}\r\n            </Select>\r\n        </FormControl>)\r\n        : null\r\n    )\r\n}\r\n\r\nexport default CountryPicker;","import React from 'react';\r\nimport {Card, CardContent, Typography, Grid} from '@material-ui/core';\r\n\r\nimport styles from './Cards.module.css';\r\nimport CountryPicker from '../CountryPicker/CountryPicker';\r\nimport CountUp from 'react-countup';\r\nimport cx from 'classnames';\r\n\r\nconst Cards = ({data: {confirmed, recovered, deaths, lastUpdate}}) => {\r\n\r\n    if(!confirmed){\r\n        return null;\r\n    }\r\n    return(\r\n        <div className={styles.container}>\r\n            <Grid container spacing={3} justify=\"center\">\r\n                <Grid item component={Card} xs={12} md={3} className={cx(styles.card, styles.infected)}>\r\n                    <CardContent>\r\n                        <Typography color=\"textSecondary\">Infected</Typography>\r\n                        <Typography variant=\"h6\">\r\n                            <CountUp start={0} end={confirmed.value} duration={1.5} separator=\",\"></CountUp>\r\n                        </Typography>\r\n                        <Typography color=\"textSecondary\">{new Date(lastUpdate).toDateString()}</Typography>\r\n                        <Typography variant=\"body2\">Number of infected cases from COVID-19</Typography>\r\n                    </CardContent>\r\n                </Grid>\r\n                <Grid item component={Card} xs={12} md={3} className={cx(styles.card, styles.recovered)}>\r\n                    <CardContent>\r\n                        <Typography color=\"textSecondary\">Recovered</Typography>\r\n                        <Typography variant=\"h6\">\r\n                            <CountUp start={0} end={recovered.value} duration={1.5} separator=\",\"></CountUp>\r\n                        </Typography>\r\n                        <Typography color=\"textSecondary\">{new Date(lastUpdate).toDateString()}</Typography>\r\n                        <Typography variant=\"body2\">Number of recovered cases from COVID-19</Typography>\r\n                    </CardContent>\r\n                </Grid>\r\n                <Grid item component={Card} xs={12} md={3} className={cx(styles.card, styles.deaths)}>\r\n                    <CardContent>\r\n                        <Typography color=\"textSecondary\">Deaths</Typography>\r\n                        <Typography variant=\"h6\">\r\n                            <CountUp start={0} end={deaths.value} duration={1.5} separator=\",\"></CountUp>\r\n                        </Typography>\r\n                        <Typography color=\"textSecondary\">{new Date(lastUpdate).toDateString()}</Typography>\r\n                        <Typography variant=\"body2\">Number of deaths caused due to COVID-19</Typography>\r\n                    </CardContent>\r\n                </Grid>\r\n            </Grid>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Cards;","import React, {useState, useEffect} from 'react';\r\nimport { fetchDailyData } from '../../api';\r\nimport { Line, Bar} from 'react-chartjs-2';\r\n\r\nimport styles from './Chart.module.css';\r\n\r\nconst Chart = ({data: {confirmed, recovered, deaths}, country}) => {\r\n\r\n    const [dailyData, setDailyData] = useState([]);\r\n\r\n    useEffect(()=>{\r\n        const fetchApi = async () => {\r\n            setDailyData(await fetchDailyData());\r\n        }\r\n        fetchApi();\r\n    },[]);\r\n\r\n    const lineChart = (\r\n        dailyData.length ?\r\n        (<Line \r\n            data={{\r\n                labels: dailyData.map(({date}) => new Date(date).toLocaleDateString(\"en-US\",{month: 'short', day: 'numeric'})),\r\n                datasets: [{\r\n                    data: dailyData.map(({confirmed}) => confirmed),\r\n                    label: 'Infected',\r\n                    borderColor: '#3333ff',\r\n                    fill: true,\r\n                }, {\r\n                    data: dailyData.map(({deaths}) => deaths),\r\n                    label: 'Deaths',\r\n                    borderColor: '#ff0000',\r\n                    backgroundColor: 'rgba(255,0,0,0.5)',\r\n                    fill: true,\r\n                }]\r\n            }}\r\n            options={{\r\n                scales: {\r\n                   yAxes: [{\r\n                      ticks: {\r\n                         callback: function(value) {\r\n                            var ranges = [\r\n                               { divider: 1e6, suffix: 'M' },\r\n                               { divider: 1e3, suffix: 'k' }\r\n                            ];\r\n                            function formatNumber(n) {\r\n                               for (var i = 0; i < ranges.length; i++) {\r\n                                  if (n >= ranges[i].divider) {\r\n                                     return (n / ranges[i].divider).toString() + ranges[i].suffix;\r\n                                  }\r\n                               }\r\n                               return n;\r\n                            }\r\n                            return formatNumber(value);\r\n                         }\r\n                      }\r\n                   }]\r\n                }\r\n             }}\r\n            \r\n            />)\r\n        : null\r\n    )\r\n\r\n    const barChart = (\r\n        confirmed ?\r\n            (<Bar\r\n                data={{\r\n                    labels: ['Infected', 'Recovered', 'Deaths'],\r\n                    datasets: [{\r\n                        label: 'People',\r\n                        backgroundColor: ['rgba(0,0,255)',\r\n                                          'rgba(0,255,0,0.5)',\r\n                                          'rgba(255,0,0,0.5)'],\r\n                        data: [confirmed.value, recovered.value, deaths.value]\r\n                    }]\r\n                }}\r\n                options={{\r\n                    legend: {},\r\n                    title: {}\r\n                }}\r\n            />\r\n            )\r\n            : null\r\n    )\r\n\r\n    return(\r\n        <div className={styles.container}>\r\n            {country ? barChart : lineChart}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Chart;","import React, { useState, useEffect } from 'react';\r\nimport { Line, Bar } from 'react-chartjs-2';\r\nimport axios from 'axios';\r\nimport cx from 'classnames';\r\n\r\nimport styles from './DailyGraph.module.css';\r\n\r\nconst DailyGraph = () =>{\r\n\r\n    const [activeClass, setActiveClass] = useState('0');\r\n    const [fetchedData, setFetchedData] = useState([]);\r\n    const [dailyData, setDailyData] = useState([]);\r\n    const [stateWise, setStateWise] = useState([]);\r\n\r\n    useEffect(() => {\r\n        const fetchApi = async () => {\r\n            const data = (await axios.get('https://api.covid19india.org/data.json'))\r\n            console.log(data.data);\r\n            setDailyData(data.data.cases_time_series);\r\n            setFetchedData(data.data.cases_time_series);\r\n            setStateWise(data.data.statewise);\r\n        }\r\n        fetchApi();\r\n    },[])\r\n\r\n    const lineChart = (\r\n        dailyData.length ?\r\n        (<Line\r\n            data={{\r\n                labels: dailyData.map(({date})=> new Date(date).toLocaleDateString(\"en-Us\",{month: 'short', day: 'numeric'})),\r\n                datasets: [{\r\n                    data: dailyData.map(({totalconfirmed})=> totalconfirmed),\r\n                    label: 'Infected Cases in India',\r\n                    borderColor: '#3333ff',\r\n                    fill: true,\r\n                }]\r\n            }}\r\n            options={{\r\n                scales: {\r\n                   yAxes: [{\r\n                      ticks: {\r\n                         callback: function(value) {\r\n                            var ranges = [\r\n                               { divider: 1e3, suffix: 'k' }\r\n                            ];\r\n                            function formatNumber(n) {\r\n                               for (var i = 0; i < ranges.length; i++) {\r\n                                  if (n >= ranges[i].divider) {\r\n                                     return (n / ranges[i].divider).toString() + ranges[i].suffix;\r\n                                  }\r\n                               }\r\n                               return n;\r\n                            }\r\n                            return formatNumber(value);\r\n                         }\r\n                      }\r\n                   }]\r\n                }\r\n             }}\r\n        />)\r\n        : null\r\n    )\r\n\r\n\r\n    const showSpecificTimeData = (days, index) => {\r\n        setActiveClass(index);\r\n        const startDate = (days !== 0) ? (new Date(new Date(new Date().setDate(new Date().getDate() - days ))).toLocaleDateString(\"en-US\", {month: 'short', day: 'numeric'})) : null\r\n        const datesArray = fetchedData.filter(({date})=> new Date(date) > new Date(startDate? startDate : null));\r\n        setDailyData(datesArray);\r\n    }\r\n\r\n    const barChart = (\r\n        dailyData.length ?\r\n        (<Bar \r\n            data={{\r\n                labels: dailyData.map(({date})=> new Date(date).toLocaleDateString(\"en-US\", {month: 'short', day: 'numeric'})),\r\n                datasets:[{\r\n                    label: 'Daily Cases India',\r\n                    backgroundColor: 'rgba(255,0,0,0.7)',\r\n                    data:dailyData.map(({dailyconfirmed})=> dailyconfirmed),\r\n                }]\r\n            }}\r\n        />)\r\n        : null\r\n    );\r\n\r\n    return(\r\n        <div className={styles.container}>\r\n                {lineChart}\r\n                {barChart}\r\n                <div className={styles.buttonsDiv}>\r\n                    <button className={cx(styles.btn, activeClass === '0' ? styles.active_button: '')} onClick={()=>showSpecificTimeData(0, \"0\")}>Beginning</button>\r\n                    <button className={cx(styles.btn,  activeClass === '1' ? styles.active_button: '')} onClick={()=>showSpecificTimeData(8, \"1\")}>This Week</button>\r\n                    <button className={cx(styles.btn,  activeClass === '2' ? styles.active_button: '')} onClick={()=>showSpecificTimeData(30, \"2\")}>One Month</button>\r\n                </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default DailyGraph;","import React, { useState, useEffect } from 'react';\r\nimport cx from 'classnames';\r\n\r\nimport { fetchStateWiseDetails } from '../../api';\r\n\r\nimport styles from './StateWiseTable.module.css';\r\n\r\nconst StateWiseTable = () => {\r\n\r\n    const[stateWise, setStateWise] = useState([]);\r\n\r\n    useEffect(() =>{\r\n        const fetchApi = async () => {\r\n            const {data: {statewise}} = await fetchStateWiseDetails();\r\n            console.log(statewise);\r\n            //remove first object(total cases) and add at the end\r\n            statewise.push(statewise.shift());\r\n            setStateWise(statewise);\r\n        }\r\n        fetchApi();\r\n    },[])\r\n\r\n    const totalCasesHeader = (\r\n        <div>\r\n            {stateWise.map(({state, confirmed, active, recovered, deaths, deltaconfirmed, deltarecovered, deltadeaths},i) => \r\n                                    state === \"Total\" ?\r\n                                    (<div className={styles.header} key={i}>\r\n                                        <div className={cx(styles.label, styles.confirmed)}>\r\n                                            <div>Confirmed</div>\r\n                                            <div>▲{deltaconfirmed}</div>\r\n                                            <div>{confirmed}</div>\r\n                                        </div>\r\n                                        <div className={cx(styles.label, styles.active)}>\r\n                                            <div>Active</div>\r\n                                            <div></div>\r\n                                            <div>{active}</div>\r\n                                        </div>\r\n                                        <div className={cx(styles.label, styles.recovered)}>\r\n                                            <div>Recovered</div>\r\n                                            <div>▲{deltarecovered}</div>\r\n                                            <div>{recovered}</div>\r\n                                        </div>\r\n                                        <div className={cx(styles.label, styles.deaths)}>\r\n                                            <div>Deaths</div>\r\n                                            <div>▲{deltadeaths}</div>\r\n                                            <div>{deaths}</div>\r\n                                        </div>\r\n                                     </div>)\r\n                                    : null\r\n                                    )}\r\n        </div>\r\n        );\r\n\r\n    const stateWiseTable = (\r\n        <table cellSpacing=\"5px\">\r\n            <thead>\r\n                <tr>\r\n                    <th className={styles.left}>State/UT</th>\r\n                    <th>Confirmed</th>\r\n                    <th>Active</th>\r\n                    <th>Recovered</th>\r\n                    <th>Deceased</th>\r\n                </tr>\r\n            </thead>\r\n            <tbody>\r\n                {stateWise.map(({state, confirmed, active, recovered, deaths, deltaconfirmed, deltarecovered, deltadeaths},i) => \r\n                            <tr key={i}>\r\n                                <td className={styles.left}>\r\n                                    {state}\r\n                                </td>\r\n                                <td className={styles.right}>\r\n                                    <span className={cx(styles.delta, styles.confirmed)}>\r\n                                        {deltaconfirmed !== \"0\" ? \"▲\"+deltaconfirmed: null}\r\n                                    </span>\r\n                                    <span>{confirmed}</span>\r\n                                </td>\r\n                                <td className={styles.right}>\r\n                                    <span>{active}</span>\r\n                                </td>\r\n                                <td className={styles.right}>\r\n                                    <span className={cx(styles.delta, styles.recovered)}>\r\n                                        {deltarecovered !== \"0\" ? \"▲\"+deltarecovered: null}\r\n                                    </span>\r\n                                    <span>{recovered}</span>\r\n                                </td>\r\n                                <td className={styles.right}>\r\n                                    <span className={cx(styles.delta, styles.deaths)}>\r\n                                        {deltadeaths !== \"0\" ? \"▲\"+deltadeaths: null}\r\n                                    </span>   \r\n                                    <span>{deaths}</span>\r\n                                </td>\r\n                            </tr>)\r\n                            }\r\n                \r\n            </tbody>\r\n        </table>\r\n);\r\n\r\nreturn(\r\n    <div className={styles.container}>\r\n        {totalCasesHeader}\r\n        <div className={styles.center}>State wise Cases (India)</div>\r\n        {stateWiseTable}\r\n    </div>\r\n);\r\n\r\n}\r\nexport default StateWiseTable;","import React, { Component } from 'react';\r\n\r\nimport Cards from './components/Cards/Cards';\r\nimport Chart from './components/Chart/Chart';\r\nimport CountryPicker from './components/CountryPicker/CountryPicker';\r\nimport DailyGraph from './components/DailyGraph/DailyGraph';\r\n\r\nimport styles from './App.module.css';\r\nimport coronaImage from './images/covid-19-logo.png';\r\n\r\nimport { fetchData, fetchCountryData} from './api/';\r\nimport StateWiseTable from './components/StateWiseTable/StateWiseTable';\r\n\r\nclass App extends Component{\r\n\r\n    state = {\r\n        data: {},\r\n        country: ''\r\n    }\r\n\r\n    handleCountryChange = async (country) => {\r\n        let fetchedData;\r\n        if(!country){\r\n            fetchedData = await fetchData();\r\n        } else{\r\n            fetchedData = await fetchCountryData(country);\r\n        }\r\n        this.setState({\r\n            data: fetchedData,\r\n            country: country\r\n        });\r\n    }\r\n\r\n    async componentDidMount() {\r\n        const data = await fetchData();\r\n        this.setState({data});\r\n    }\r\n\r\n    render(){\r\n        const {data, country} = this.state;\r\n        return(<div className={styles.container}>\r\n                <img className={styles.image} src={coronaImage} />\r\n                \r\n                <StateWiseTable />\r\n                <DailyGraph />\r\n                <div className={styles.heading}>World wide Cases</div>\r\n                <Cards data={data}/>\r\n                <CountryPicker handleCountryChange={this.handleCountryChange}/>\r\n                <Chart data={data} country={country}/>\r\n            </div>)\r\n    }\r\n}\r\n\r\nexport default App;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\n\r\nimport App from './App';\r\n\r\nReactDOM.render(<App/>, document.getElementById('root'));","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"App_container__2RhEu\",\"image\":\"App_image__3h0dH\",\"heading\":\"App_heading__130ZF\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"StateWiseTable_container__3rzAZ\",\"left\":\"StateWiseTable_left__1umCP\",\"right\":\"StateWiseTable_right__1Whn8\",\"center\":\"StateWiseTable_center__3Oi8-\",\"header\":\"StateWiseTable_header__2B8aB\",\"label\":\"StateWiseTable_label__iAeah\",\"confirmed\":\"StateWiseTable_confirmed__1ADbw\",\"active\":\"StateWiseTable_active__3FrkD\",\"recovered\":\"StateWiseTable_recovered__qMs0A\",\"deaths\":\"StateWiseTable_deaths__3MYgv\",\"delta\":\"StateWiseTable_delta__ULEUE\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"formControl\":\"CountryPicker_formControl__YmW-_\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Chart_container__1kjAZ\"};","module.exports = __webpack_public_path__ + \"static/media/covid-19-logo.017560a0.png\";"],"sourceRoot":""}